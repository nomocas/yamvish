
/*

.set('opts', {
		myProp: '{{ hello world }}'
	})
	.bindMap('opts')
	// or
	.bindMapToParent('opts')
*/






Filter syntax : keep filters ? 		NO : todo : remove filters and find solution for placing them in globals


simple interpolation with { ... }

add sync flag in context for string output


.suspendUntil('{{ $route }}')							OK-dom-string : missing twopass


work on subscribe handler arguments list (remove path ? put value first)     						OK	

each(var, templ, emptyTempl) 							OK

tag(name, ?attributeMap, templ1, t2, ... )				OK	

.addCustomTag(name, defautAttrMap, templ)				OK


_binds ? remettre binds : passer par arguments on subscribe							OK

add $env in context											OK
==> maybe associate env to context at construction 			OK
==> add $env in context										OK


	routedsl 					OK

	binds 						OK

	$env in context 			OK

	==> interpolable : appel a fonction ==> faire attention Ã  pas choper la fonction  OK

eventListeners : click(addUser(user)) : should retrieve user before feeding addUser			OK



context.toAgora('home:routed');								OK
context.onAgora('home:routed', function(msg){ 			OK
	this.push('items', msg)
});





TWOPASS : 


		Template.prototype.toContext(?context) for firstPass



HTML PARSING 


<view app:home>
	<this>
		this.route('/home')
			.set({
				  myAction:function(e){
				      this.set('test', true);
				  },
				reu:'wiiii'
			})
	</this>
	loli {{ reu }}
	<br/><br/><br/>
	route : {{ $route }}
	<div>
		<view>
			<this>
				this.route('/home')
			</this>
			<p>route2 : {{ $route }}</p>
			<button data-template="click('hello')">do test</button>
			<this>this.suspendUntil('{{ test }}')</this>
			<div>after suspession</div>
		</view>
	</div>
</view>






<if {{ foo.zoo }} >

<else>

</if>



<each foo.zoo>

<empty>

</each>

<with foo.zoo></with>
<client></client>
<server></server>

<this>
	this.exec(...)
	.click(...);
</this>




<uikit:flickity />












//_____________________________________________








	TODO : 
		parsing 
			from String 				OK

		 .disabled 						OK

		if('!initialised', ..., ...) 		OK

		integrate filters and expressions

		request and c3po-bridge 			OK

		model validation  					OK

		route 								OK	

		views pool 							OK		

		collection filtering view 				OK

		.client( t1, t2, ...)					OK
		.server(t1, t2, ...) 					OK

		promise management : catch end render / load 		OK
		
		mount/umount event 						OK

		y.dependent('bloupi', 'foo', function(bloupi, foo){});				OK
		








	Should :

		rename _yamvish_binds in _binds 					OK
		rename all privates vars with _*

		for each template handler : 
		add args in queue (through done) and place inner functions outside : no more closure



	ES5/6


		arrows everywhere

		arguments manip

		simple interpolation

		classes

		...
